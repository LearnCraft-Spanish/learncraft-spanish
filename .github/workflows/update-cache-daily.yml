name: Update Mock Data Cache Daily

on:
  # Runs daily at 8am UTC/2am CST
  schedule:
    - cron: '0 8 * * *'

  # Allows you to trigger the workflow manually
  workflow_dispatch:

jobs:
  update-cache:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Node.js environment
      - name: Set up Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      # Write .npmrc
      - name: Write .npmrc
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_PACKAGE_KEY }}" > .npmrc
          echo "@learncraft-spanish:registry=https://npm.pkg.github.com" >> .npmrc
          echo "package-manager=pnpm" >> .npmrc
          echo "engine-strict=true" >> .npmrc

      # Install pnpm
      - name: Install pnpm
        run: npm install -g pnpm@9.7

      # Cache Node.js dependencies
      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            cache-node-modules-

      # Install dependencies
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-workspace
        env:
          GH_PACKAGE_KEY: ${{ secrets.GH_PACKAGE_KEY }}

      # Run the update-cache.js script
      - name: Update Cache
        run: pnpm exec tsx .github/workflows/update-cache.ts
        env:
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
          AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
          AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
          BACKEND_URL: ${{ secrets.BACKEND_URL }}

      # Save the updated mock data to cache
      - name: Cache mock data
        uses: actions/cache@v3
        with:
          path: ./mocks/data/serverlike/actualServerData.json
          key: mockdata-${{ hashFiles('./src/functions/DataModel.ts, ./mocks/data/serverlike/serverlikeData.ts') }}
