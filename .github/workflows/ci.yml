# Full CI flow for the project
name: Continuous Integration

on:
  # master branch will not accept if any failed
  # development branch will accept regardless of the status of the jobs
  pull_request:
    branches:
      - development
      - master
  push:
    branches:
      - development
      - master
  workflow_dispatch:

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up Node.js environment
      - name: Set up Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: "lts/*"

      # Install pnpm
      - name: Install pnpm
        run: npm install -g pnpm

      # Cache Node.js dependencies
      - name: Cache Node.js dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            cache-node-modules-

      # Install dependencies
      - name: Install dependencies
        run: pnpm install

      # Run Prettier
      - name: Run Prettier
        run: pnpm run format:check

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up Node.js environment
      - name: Set up Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: "lts/*"

      # Install pnpm
      - name: Install pnpm
        run: npm install -g pnpm

      # Cache Node.js dependencies
      - name: Cache Node.js dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            cache-node-modules-

      # Install dependencies
      - name: Install dependencies
        run: pnpm install

      # Restore the mock data cache
      - name: Restore mock data cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ./mocks/data/serverlike/actualServerData.json
          key: mockdata-${{ hashFiles('./mocks/data/serverlike/actualServerData.json') }}
          restore-keys: |
            mockdata-

      # Fetch mock data if cache miss
      - name: Fetch mock data if cache miss
        if: steps.cache.outputs.cache-hit != 'true'
        run: node .github/workflows/update-cache.ts
        env:
          # Suppress context access warning
          # Context access is safe in this case
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
          AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
          AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
          BACKEND_URL: ${{ secrets.BACKEND_URL }}

      # Run ESLint
      - name: Run ESLint
        run: pnpm run typecheck

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up Node.js environment
      - name: Set up Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: "lts/*"

      # Install pnpm
      - name: Install pnpm
        run: npm install -g pnpm

      # Cache Node.js dependencies
      - name: Cache Node.js dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            cache-node-modules-

      # Install dependencies
      - name: Install dependencies
        run: pnpm install

      # Run ESLint
      - name: Run ESLint
        run: pnpm run lint

  test:
    runs-on: ubuntu-latest
    needs: [format, typecheck, lint]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up Node.js environment
      - name: Set up Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: "lts/*"

      # Install pnpm
      - name: Install pnpm
        run: npm install -g pnpm

      # Cache Node.js dependencies
      - name: Cache Node.js dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            cache-node-modules-

      # Install dependencies
      - name: Install dependencies
        run: pnpm install

      # Restore the mock data cache
      - name: Restore mock data cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ./mocks/data/serverlike/actualServerData.json
          key: mockdata-${{ hashFiles('./mocks/data/serverlike/actualServerData.json') }}
          restore-keys: |
            mockdata-

      # Fetch mock data if cache miss
      - name: Fetch mock data if cache miss
        if: steps.cache.outputs.cache-hit != 'true'
        run: node .github/workflows/update-cache.ts
        env:
          # Suppress context access warning
          # Context access is safe in this case
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
          AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
          AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
          BACKEND_URL: ${{ secrets.BACKEND_URL }}

        # Run the test suite
      - name: Run tests
        run: pnpm run test
        env:
          BACKEND_URL: ${{ secrets.BACKEND_URL }}
