name: Continuous Integration

on:
  pull_request:
    branches:
      - development
      - master
  push:
    branches:
      - development
      - master
  workflow_dispatch:

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-pnpm/action.yml
        with:
          node-version: "lts/*" # Or specify a different Node.js version

      - name: Run Prettier
        run: pnpm run format:check

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-pnpm/action.yml
        with:
          node-version: "lts/*"

      - name: Run ESLint
        run: pnpm run lint

  test:
    runs-on: ubuntu-latest
    needs: [format, lint] # Reuse the setup, format, and lint jobs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-pnpm/action.yml
        with:
          node-version: "lts/*"

      # Restore the mock data cache
      - name: Restore mock data cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ./mocks/data/serverlike/actualServerData.json
          key: mockdata-${{ hashFiles('./mocks/data/serverlike/actualServerData.json') }}
          restore-keys: |
            mockdata-

      # Fetch mock data if cache miss
      - name: Fetch mock data if cache miss
        if: steps.cache.outputs.cache-hit != 'true'
        run: node .github/workflows/update-cache.js
        env:
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
          AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
          AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
          BACKEND_URL: ${{ secrets.BACKEND_URL }}

      # Run the test suite
      - name: Run tests
        run: pnpm test # Use pnpm to run tests
